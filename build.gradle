buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = "${mod_version}"
group = 'muramasa.gti'
archivesBaseName = "${archive_name}"
antimatter_version="0.0.1"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            include '**/**'
            srcDirs += 'src/generated/resources'
            exclude '.cache'
            exclude 'Thumbs.db'
        }
    }
}

minecraft {
    mappings channel: 'snapshot', version: "${mappings_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.markers', 'SCAN,REGISTRIES'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            mods {
                gti {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            mods {
                gti {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'gti', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')
            mods {
                gti {
                    source sourceSets.main
                }
            }
        }
    }
}

//Force a dependency on a local version of antimatterAPI.
repositories {
    maven {
        url '../AntimatterAPI/build/libs'
    }
}

repositories {
    maven {
        name "JEI"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name "JEI Fallback"
        url "https://modmaven.k-4u.nl"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compile "muramasa.antimatter:antimatter:${antimatter_version}"
    if (local_dev_dependancies.toBoolean()) {
        compile project(":antimatterapi")
        runtime project(":antimatterapi")
        compileOnly fg.deobf("mezz.jei:jei-${jei_version}:api")
        runtimeOnly fg.deobf("mezz.jei:jei-${jei_version}")
    }
    else {
        compileOnly fg.deobf("mezz.jei:jei-${jei_version}:api")
        runtimeOnly fg.deobf("mezz.jei:jei-${jei_version}")
    }
}

jar {
    zip64 true
}
